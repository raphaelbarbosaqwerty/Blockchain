{
  "contractName": "GabulNft",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nfts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getTotalNfts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getNftOwnerByIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getTotalNftQuantityByOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getNftById",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getNfts",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "internalType": "struct GabulNft.NFT[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getNftById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getNftOwnerByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct GabulNft.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getTotalNftQuantityByOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalNfts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GabulNft.sol\":\"GabulNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/GabulNft.sol\":{\"keccak256\":\"0x51300c8b7e47bfb37c4b921c1493438cc226640bebfcf11e0b8cd529111d1e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://918b8d9a98db1e5cc18a9a67813ba130bf5e14ceedd2a16a5ff4d219492c19f1\",\"dweb:/ipfs/QmVttGQPT8CDQ831VbjtjySpdDHggRvG2EMfXjhhi67Nsj\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b5060005b600a8110156100f35767016345785d8a0000600182600a811061007a576100796100f9565b5b60020201600001819055506000600182600a811061009b5761009a6100f9565b5b6002020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806100eb90610161565b915050610054565b506101a9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061016c82610157565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361019e5761019d610128565b5b600182019050919050565b6109e5806101b86000396000f3fe60806040526004361061007b5760003560e01c8063b0a874371161004e578063b0a8743714610152578063c3f64b731461018f578063d8cb55e3146101cc578063d96a094a146101f75761007b565b8063265aa621146100805780638da5cb5b146100be57806395a81b8f146100e95780639ffd36b014610127575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610687565b610213565b6040516100b5929190610704565b60405180910390f35b3480156100ca57600080fd5b506100d361025d565b6040516100e0919061072d565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190610687565b610281565b60405161011e929190610704565b60405180910390f35b34801561013357600080fd5b5061013c6102e5565b6040516101499190610748565b60405180910390f35b34801561015e57600080fd5b506101796004803603810190610174919061078f565b6102ee565b6040516101869190610748565b60405180910390f35b34801561019b57600080fd5b506101b660048036038101906101b19190610687565b61039b565b6040516101c3919061072d565b60405180910390f35b3480156101d857600080fd5b506101e16103e0565b6040516101ee91906108b8565b60405180910390f35b610211600480360381019061020c9190610687565b610509565b005b600181600a811061022357600080fd5b600202016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600183600a8110610298576102976108da565b5b6002020160000154600184600a81106102b4576102b36108da565b5b6002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691509150915091565b6000600a905090565b6000806000905060005b600a811015610391578373ffffffffffffffffffffffffffffffffffffffff16600182600a811061032c5761032b6108da565b5b6002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361037e57818061037a90610938565b9250505b808061038990610938565b9150506102f8565b5080915050919050565b6000600182600a81106103b1576103b06108da565b5b6002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606000600a67ffffffffffffffff8111156103ff576103fe610980565b5b60405190808252806020026020018201604052801561043857816020015b61042561061c565b81526020019060019003908161041d5790505b50905060005b600a811015610501576000600182600a811061045d5761045c6108da565b5b60020201905080604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508383815181106104e2576104e16108da565b5b60200260200101819052505080806104f990610938565b91505061043e565b508091505090565b600a8110801561051a575060008110155b61052357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600182600a811061054f5761054e6108da565b5b6002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461059757600080fd5b600181600a81106105ab576105aa6108da565b5b60020201600001543410156105bf57600080fd5b33600182600a81106105d4576105d36108da565b5b6002020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b6000819050919050565b61066481610651565b811461066f57600080fd5b50565b6000813590506106818161065b565b92915050565b60006020828403121561069d5761069c61064c565b5b60006106ab84828501610672565b91505092915050565b6106bd81610651565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ee826106c3565b9050919050565b6106fe816106e3565b82525050565b600060408201905061071960008301856106b4565b61072660208301846106f5565b9392505050565b600060208201905061074260008301846106f5565b92915050565b600060208201905061075d60008301846106b4565b92915050565b61076c816106e3565b811461077757600080fd5b50565b60008135905061078981610763565b92915050565b6000602082840312156107a5576107a461064c565b5b60006107b38482850161077a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107f181610651565b82525050565b610800816106e3565b82525050565b60408201600082015161081c60008501826107e8565b50602082015161082f60208501826107f7565b50505050565b60006108418383610806565b60408301905092915050565b6000602082019050919050565b6000610865826107bc565b61086f81856107c7565b935061087a836107d8565b8060005b838110156108ab5781516108928882610835565b975061089d8361084d565b92505060018101905061087e565b5085935050505092915050565b600060208201905081810360008301526108d2818461085a565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061094382610651565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361097557610974610909565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220d5d23fd9996ddbe5b7ebc9e999b91cd1c1e87976e1e985bcb2ffe7ab465ffcc264736f6c634300080d0033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063b0a874371161004e578063b0a8743714610152578063c3f64b731461018f578063d8cb55e3146101cc578063d96a094a146101f75761007b565b8063265aa621146100805780638da5cb5b146100be57806395a81b8f146100e95780639ffd36b014610127575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610687565b610213565b6040516100b5929190610704565b60405180910390f35b3480156100ca57600080fd5b506100d361025d565b6040516100e0919061072d565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190610687565b610281565b60405161011e929190610704565b60405180910390f35b34801561013357600080fd5b5061013c6102e5565b6040516101499190610748565b60405180910390f35b34801561015e57600080fd5b506101796004803603810190610174919061078f565b6102ee565b6040516101869190610748565b60405180910390f35b34801561019b57600080fd5b506101b660048036038101906101b19190610687565b61039b565b6040516101c3919061072d565b60405180910390f35b3480156101d857600080fd5b506101e16103e0565b6040516101ee91906108b8565b60405180910390f35b610211600480360381019061020c9190610687565b610509565b005b600181600a811061022357600080fd5b600202016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600183600a8110610298576102976108da565b5b6002020160000154600184600a81106102b4576102b36108da565b5b6002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691509150915091565b6000600a905090565b6000806000905060005b600a811015610391578373ffffffffffffffffffffffffffffffffffffffff16600182600a811061032c5761032b6108da565b5b6002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361037e57818061037a90610938565b9250505b808061038990610938565b9150506102f8565b5080915050919050565b6000600182600a81106103b1576103b06108da565b5b6002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606000600a67ffffffffffffffff8111156103ff576103fe610980565b5b60405190808252806020026020018201604052801561043857816020015b61042561061c565b81526020019060019003908161041d5790505b50905060005b600a811015610501576000600182600a811061045d5761045c6108da565b5b60020201905080604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508383815181106104e2576104e16108da565b5b60200260200101819052505080806104f990610938565b91505061043e565b508091505090565b600a8110801561051a575060008110155b61052357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600182600a811061054f5761054e6108da565b5b6002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461059757600080fd5b600181600a81106105ab576105aa6108da565b5b60020201600001543410156105bf57600080fd5b33600182600a81106105d4576105d36108da565b5b6002020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b6000819050919050565b61066481610651565b811461066f57600080fd5b50565b6000813590506106818161065b565b92915050565b60006020828403121561069d5761069c61064c565b5b60006106ab84828501610672565b91505092915050565b6106bd81610651565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ee826106c3565b9050919050565b6106fe816106e3565b82525050565b600060408201905061071960008301856106b4565b61072660208301846106f5565b9392505050565b600060208201905061074260008301846106f5565b92915050565b600060208201905061075d60008301846106b4565b92915050565b61076c816106e3565b811461077757600080fd5b50565b60008135905061078981610763565b92915050565b6000602082840312156107a5576107a461064c565b5b60006107b38482850161077a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107f181610651565b82525050565b610800816106e3565b82525050565b60408201600082015161081c60008501826107e8565b50602082015161082f60208501826107f7565b50505050565b60006108418383610806565b60408301905092915050565b6000602082019050919050565b6000610865826107bc565b61086f81856107c7565b935061087a836107d8565b8060005b838110156108ab5781516108928882610835565b975061089d8361084d565b92505060018101905061087e565b5085935050505092915050565b600060208201905081810360008301526108d2818461085a565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061094382610651565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361097557610974610909565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220d5d23fd9996ddbe5b7ebc9e999b91cd1c1e87976e1e985bcb2ffe7ab465ffcc264736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:698:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "52:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "55:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "45:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "45:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "45:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "149:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:4:1",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "142:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "142:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "173:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "176:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:15:1"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "7:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "221:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "238:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "241:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "231:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "231:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "335:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "338:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "328:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "328:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "359:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "362:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "352:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "352:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "193:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "424:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "434:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "445:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "434:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "406:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "416:7:1",
                "type": ""
              }
            ],
            "src": "379:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "505:190:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "515:33:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "542:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "524:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "524:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "515:5:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "638:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "640:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "640:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "640:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "563:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "570:66:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "560:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "560:77:1"
                  },
                  "nodeType": "YulIf",
                  "src": "557:103:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "669:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "680:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "687:1:1",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "676:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "676:13:1"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "669:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "491:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "501:3:1",
                "type": ""
              }
            ],
            "src": "462:233:1"
          }
        ]
      },
      "contents": "{\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6777:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:1",
                "type": ""
              }
            ],
            "src": "7:75:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:1"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:1"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:1",
                "type": ""
              }
            ],
            "src": "334:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:1"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:1",
                "type": ""
              }
            ],
            "src": "417:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:1"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:1",
                "type": ""
              }
            ],
            "src": "545:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:1",
                "type": ""
              }
            ],
            "src": "690:329:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1090:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1107:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1130:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1112:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1112:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1100:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1100:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1078:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1085:3:1",
                "type": ""
              }
            ],
            "src": "1025:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1194:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1204:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1219:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1226:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1215:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1204:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1176:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1186:7:1",
                "type": ""
              }
            ],
            "src": "1149:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1326:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1336:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1365:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1347:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1347:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1336:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1308:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1318:7:1",
                "type": ""
              }
            ],
            "src": "1281:96:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1448:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1465:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1488:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1470:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1470:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1458:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1458:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1458:37:1"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1436:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1443:3:1",
                "type": ""
              }
            ],
            "src": "1383:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1633:206:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1643:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1655:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1666:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1651:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1651:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1643:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1723:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1736:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1747:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1732:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1732:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1679:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1679:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1679:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1804:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1817:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1828:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1813:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1813:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1760:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1760:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1760:72:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1597:9:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1609:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1617:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1628:4:1",
                "type": ""
              }
            ],
            "src": "1507:332:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1943:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1953:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1965:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1976:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1961:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1961:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1953:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2033:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2046:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2057:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2042:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2042:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1989:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1989:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1989:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1915:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1927:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1938:4:1",
                "type": ""
              }
            ],
            "src": "1845:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2171:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2181:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2193:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2204:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2189:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2189:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2181:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2261:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2274:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2285:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2270:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2270:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2217:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2217:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2217:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2143:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2155:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2166:4:1",
                "type": ""
              }
            ],
            "src": "2073:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2344:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2401:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2410:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2413:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2403:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2403:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2403:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2367:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2392:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2374:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2374:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2364:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2364:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2357:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2357:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2354:63:1"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2337:5:1",
                "type": ""
              }
            ],
            "src": "2301:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2481:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2491:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2513:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2500:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2500:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2491:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2556:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2529:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2529:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2529:33:1"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2459:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2467:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2475:5:1",
                "type": ""
              }
            ],
            "src": "2429:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2640:263:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2686:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2688:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2688:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2688:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2661:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2670:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2657:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2657:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2682:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2653:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2653:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2650:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2779:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2794:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2808:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2798:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2823:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2858:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2869:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2854:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2854:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2878:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2833:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2833:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2823:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2610:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2621:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2633:6:1",
                "type": ""
              }
            ],
            "src": "2574:329:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3002:40:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3013:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3029:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3023:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3023:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3013:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2985:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2995:6:1",
                "type": ""
              }
            ],
            "src": "2909:133:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3178:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3195:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3200:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3188:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3188:19:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3188:19:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3216:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3235:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3240:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3231:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3231:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3216:11:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3150:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3155:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3166:11:1",
                "type": ""
              }
            ],
            "src": "3048:203:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3348:60:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3358:11:1",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "3366:3:1"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "3358:4:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3379:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "3391:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3396:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3387:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3387:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "3379:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "3335:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3343:4:1",
                "type": ""
              }
            ],
            "src": "3257:151:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3469:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3486:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3509:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3491:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3491:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3479:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3479:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3479:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3457:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3464:3:1",
                "type": ""
              }
            ],
            "src": "3414:108:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3583:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3600:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3623:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3605:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3605:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3593:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3593:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3593:37:1"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3571:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3578:3:1",
                "type": ""
              }
            ],
            "src": "3528:108:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3786:393:1",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3796:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3812:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3817:4:1",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3808:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3808:14:1"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "3800:4:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3832:165:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3868:43:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3898:5:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3905:4:1",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3894:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3894:16:1"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3888:5:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3888:23:1"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3872:12:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3958:12:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3976:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3981:4:1",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3972:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3972:14:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3924:33:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3924:63:1"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3924:63:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4007:165:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4043:43:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4073:5:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4080:4:1",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4069:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4069:16:1"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4063:5:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4063:23:1"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4047:12:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4133:12:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4151:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4156:4:1",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4147:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4147:14:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4099:33:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4099:63:1"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4099:63:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_NFT_$13_memory_ptr_to_t_struct$_NFT_$13_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3773:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3780:3:1",
                "type": ""
              }
            ],
            "src": "3692:487:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4303:137:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4385:6:1"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4393:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_NFT_$13_memory_ptr_to_t_struct$_NFT_$13_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4313:71:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4313:84:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4313:84:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4406:28:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4424:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4429:4:1",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4420:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4420:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "4406:10:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_NFT_$13_memory_ptr_to_t_struct$_NFT_$13_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4276:6:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4284:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "4292:10:1",
                "type": ""
              }
            ],
            "src": "4185:255:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4540:38:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4550:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "4562:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4567:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4558:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4558:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "4550:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "4527:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "4535:4:1",
                "type": ""
              }
            ],
            "src": "4446:132:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4800:722:1",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4810:87:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4891:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4824:66:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4824:73:1"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4814:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4906:112:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5006:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5011:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4913:92:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4913:105:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4906:3:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5027:90:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5111:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5042:68:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5042:75:1"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "5031:7:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5126:21:1",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "5140:7:1"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5130:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5216:281:1",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5230:34:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5257:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5251:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5251:13:1"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "5234:13:1",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5277:108:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "5366:13:1"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5381:3:1"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_NFT_$13_memory_ptr_to_t_struct$_NFT_$13_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5284:81:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5284:101:1"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5277:3:1"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5398:89:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5480:6:1"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5408:71:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5408:79:1"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5398:6:1"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5178:1:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5181:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5175:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5175:13:1"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5189:18:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5191:14:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5200:1:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5203:1:1",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5196:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5196:9:1"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5191:1:1"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5160:14:1",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5162:10:1",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5171:1:1",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "5166:1:1",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "5156:341:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5506:10:1",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5513:3:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5506:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4779:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4786:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4795:3:1",
                "type": ""
              }
            ],
            "src": "4638:884:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5714:263:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5724:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5736:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5747:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5732:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5732:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5724:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5771:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5782:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5767:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5767:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5790:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5796:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5786:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5786:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5760:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5760:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5760:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5816:154:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5956:6:1"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5965:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5824:131:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5824:146:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5816:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5686:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5698:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5709:4:1",
                "type": ""
              }
            ],
            "src": "5528:449:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6011:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6028:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6031:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6021:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6021:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6021:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6125:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6128:4:1",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6118:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6118:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6118:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6149:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6152:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6142:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6142:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6142:15:1"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "5983:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6197:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6214:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6217:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6207:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6207:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6207:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6311:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6314:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6304:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6304:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6304:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6335:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6338:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6328:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6328:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6328:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6169:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6398:190:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6408:33:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6435:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6417:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6417:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6408:5:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6531:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6533:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6533:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6533:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6456:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6463:66:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6453:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6453:77:1"
                  },
                  "nodeType": "YulIf",
                  "src": "6450:103:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6562:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6573:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6580:1:1",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6569:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6569:13:1"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6562:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6384:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6394:3:1",
                "type": ""
              }
            ],
            "src": "6355:233:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6622:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6639:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6642:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6632:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6632:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6632:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6736:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6739:4:1",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6729:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6729:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6729:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6760:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6763:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6753:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6753:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6753:15:1"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "6594:180:1"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct GabulNft.NFT -> struct GabulNft.NFT\n    function abi_encode_t_struct$_NFT_$13_memory_ptr_to_t_struct$_NFT_$13_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_NFT_$13_memory_ptr_to_t_struct$_NFT_$13_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_NFT_$13_memory_ptr_to_t_struct$_NFT_$13_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct GabulNft.NFT[] -> struct GabulNft.NFT[]\n    function abi_encode_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_NFT_$13_memory_ptr_to_t_struct$_NFT_$13_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "101:1909:0:-:0;;;148:10;125:33;;;;;;;;;;;;;;;;;;;;269:161;;;;;;;;;;298:9;293:131;317:2;313:1;:6;293:131;;;356:4;340;345:1;340:7;;;;;;;:::i;:::-;;;;;:13;;:20;;;;409:3;385:4;390:1;385:7;;;;;;;:::i;:::-;;;;;:13;;;:28;;;;;;;;;;;;;;;;;;321:3;;;;;:::i;:::-;;;;293:131;;;;101:1909;;7:180:1;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:180;241:77;238:1;231:88;338:4;335:1;328:15;362:4;359:1;352:15;379:77;416:7;445:5;434:16;;379:77;;;:::o;462:233::-;501:3;524:24;542:5;524:24;:::i;:::-;515:33;;570:66;563:5;560:77;557:103;;640:18;;:::i;:::-;557:103;687:1;680:5;676:13;669:20;;462:233;;;:::o;101:1909:0:-;;;;;;;",
  "deployedSourceMap": "101:1909:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;235:27;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;125:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1263:169;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;692:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;941:316;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;789:146;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1438:279;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;436:250;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;235:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;125:33::-;;;;;;;;;;;;:::o;1263:169::-;1346:7;1355;1386:4;1391:6;1386:12;;;;;;;:::i;:::-;;;;;:18;;;1406:4;1411:6;1406:12;;;;;;;:::i;:::-;;;;;:18;;;;;;;;;;;;1378:47;;;;1263:169;;;:::o;692:91::-;739:7;765:11;758:18;;692:91;:::o;941:316::-;1042:7;1065:13;1081:1;1065:17;;1097:9;1092:137;1116:11;1112:1;:15;1092:137;;;1169:8;1152:25;;:4;1157:1;1152:7;;;;;;;:::i;:::-;;;;;:13;;;;;;;;;;;;:25;;;1148:71;;1197:7;;;;;:::i;:::-;;;;1148:71;1129:3;;;;;:::i;:::-;;;;1092:137;;;;1245:5;1238:12;;;941:316;;;:::o;789:146::-;880:7;910:4;915:6;910:12;;;;;;;:::i;:::-;;;;;:18;;;;;;;;;;;;903:25;;789:146;;;:::o;1438:279::-;1480:12;1504:17;1534:11;1524:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1504:42;;1561:9;1556:133;1580:11;1576:1;:15;1556:133;;;1612:22;1637:4;1642:1;1637:7;;;;;;;:::i;:::-;;;;;1612:32;;1668:10;1658:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:4;1663:1;1658:7;;;;;;;;:::i;:::-;;;;;;;:20;;;;1598:91;1593:3;;;;;:::i;:::-;;;;1556:133;;;;1706:4;1699:11;;;1438:279;:::o;436:250::-;96:2;500:6;:19;:34;;;;;533:1;523:6;:11;;500:34;492:43;;;;;;583:3;553:34;;:4;558:6;553:12;;;;;;;:::i;:::-;;;;;:18;;;;;;;;;;;;:34;;;545:43;;;;;;619:4;624:6;619:12;;;;;;;:::i;:::-;;;;;:18;;;606:9;:31;;598:40;;;;;;669:10;648:4;653:6;648:12;;;;;;;:::i;:::-;;;;;:18;;;:31;;;;;;;;;;;;;;;;;;436:250;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:126::-;1186:7;1226:42;1219:5;1215:54;1204:65;;1149:126;;;:::o;1281:96::-;1318:7;1347:24;1365:5;1347:24;:::i;:::-;1336:35;;1281:96;;;:::o;1383:118::-;1470:24;1488:5;1470:24;:::i;:::-;1465:3;1458:37;1383:118;;:::o;1507:332::-;1628:4;1666:2;1655:9;1651:18;1643:26;;1679:71;1747:1;1736:9;1732:17;1723:6;1679:71;:::i;:::-;1760:72;1828:2;1817:9;1813:18;1804:6;1760:72;:::i;:::-;1507:332;;;;;:::o;1845:222::-;1938:4;1976:2;1965:9;1961:18;1953:26;;1989:71;2057:1;2046:9;2042:17;2033:6;1989:71;:::i;:::-;1845:222;;;;:::o;2073:::-;2166:4;2204:2;2193:9;2189:18;2181:26;;2217:71;2285:1;2274:9;2270:17;2261:6;2217:71;:::i;:::-;2073:222;;;;:::o;2301:122::-;2374:24;2392:5;2374:24;:::i;:::-;2367:5;2364:35;2354:63;;2413:1;2410;2403:12;2354:63;2301:122;:::o;2429:139::-;2475:5;2513:6;2500:20;2491:29;;2529:33;2556:5;2529:33;:::i;:::-;2429:139;;;;:::o;2574:329::-;2633:6;2682:2;2670:9;2661:7;2657:23;2653:32;2650:119;;;2688:79;;:::i;:::-;2650:119;2808:1;2833:53;2878:7;2869:6;2858:9;2854:22;2833:53;:::i;:::-;2823:63;;2779:117;2574:329;;;;:::o;2909:133::-;2995:6;3029:5;3023:12;3013:22;;2909:133;;;:::o;3048:203::-;3166:11;3200:6;3195:3;3188:19;3240:4;3235:3;3231:14;3216:29;;3048:203;;;;:::o;3257:151::-;3343:4;3366:3;3358:11;;3396:4;3391:3;3387:14;3379:22;;3257:151;;;:::o;3414:108::-;3491:24;3509:5;3491:24;:::i;:::-;3486:3;3479:37;3414:108;;:::o;3528:::-;3605:24;3623:5;3605:24;:::i;:::-;3600:3;3593:37;3528:108;;:::o;3692:487::-;3817:4;3812:3;3808:14;3905:4;3898:5;3894:16;3888:23;3924:63;3981:4;3976:3;3972:14;3958:12;3924:63;:::i;:::-;3832:165;4080:4;4073:5;4069:16;4063:23;4099:63;4156:4;4151:3;4147:14;4133:12;4099:63;:::i;:::-;4007:165;3786:393;3692:487;;:::o;4185:255::-;4292:10;4313:84;4393:3;4385:6;4313:84;:::i;:::-;4429:4;4424:3;4420:14;4406:28;;4185:255;;;;:::o;4446:132::-;4535:4;4567;4562:3;4558:14;4550:22;;4446:132;;;:::o;4638:884::-;4795:3;4824:73;4891:5;4824:73;:::i;:::-;4913:105;5011:6;5006:3;4913:105;:::i;:::-;4906:112;;5042:75;5111:5;5042:75;:::i;:::-;5140:7;5171:1;5156:341;5181:6;5178:1;5175:13;5156:341;;;5257:6;5251:13;5284:101;5381:3;5366:13;5284:101;:::i;:::-;5277:108;;5408:79;5480:6;5408:79;:::i;:::-;5398:89;;5216:281;5203:1;5200;5196:9;5191:14;;5156:341;;;5160:14;5513:3;5506:10;;4800:722;;;4638:884;;;;:::o;5528:449::-;5709:4;5747:2;5736:9;5732:18;5724:26;;5796:9;5790:4;5786:20;5782:1;5771:9;5767:17;5760:47;5824:146;5965:4;5956:6;5824:146;:::i;:::-;5816:154;;5528:449;;;;:::o;5983:180::-;6031:77;6028:1;6021:88;6128:4;6125:1;6118:15;6152:4;6149:1;6142:15;6169:180;6217:77;6214:1;6207:88;6314:4;6311:1;6304:15;6338:4;6335:1;6328:15;6355:233;6394:3;6417:24;6435:5;6417:24;:::i;:::-;6408:33;;6463:66;6456:5;6453:77;6450:103;;6533:18;;:::i;:::-;6450:103;6580:1;6573:5;6569:13;6562:20;;6355:233;;;:::o;6594:180::-;6642:77;6639:1;6632:88;6739:4;6736:1;6729:15;6763:4;6760:1;6753:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nuint256 constant TOTAL_NFTS = 10;\n\ncontract GabulNft {\n    address public owner = msg.sender;\n\n    struct NFT {\n        uint256 price;\n        address owner;\n    }\n\n    NFT[TOTAL_NFTS] public nfts;\n\n    constructor() {\n        for (uint256 i = 0; i < 10; i++) {\n            nfts[i].price = 1e17; // 0.1 ETH\n            nfts[i].owner = address(0x0);\n        }\n    }\n\n    function buy(uint256 _index) external payable {\n        require(_index < TOTAL_NFTS && _index >= 0);\n        require(nfts[_index].owner == address(0x0));\n        require(msg.value >= nfts[_index].price);\n        nfts[_index].owner = msg.sender;\n    }\n\n    function getTotalNfts() external view returns (uint256) {\n        return nfts.length;\n    }\n\n    function getNftOwnerByIndex(uint256 _index)\n        external\n        view\n        returns (address)\n    {\n        return nfts[_index].owner;\n    }\n\n    function getTotalNftQuantityByOwner(address _address)\n        external\n        view\n        returns (uint256)\n    {\n        uint256 total = 0;\n        for (uint256 i = 0; i < nfts.length; i++) {\n            if (nfts[i].owner == _address) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    function getNftById(uint256 _index)\n        external\n        view\n        returns (uint256, address)\n    {\n        return (nfts[_index].price, nfts[_index].owner);\n    }\n\n    function getNfts() external view returns (NFT[] memory) {\n        NFT[] memory _nft = new NFT[](nfts.length);\n        for (uint256 i = 0; i < nfts.length; i++) {\n            NFT storage _nftUnique = nfts[i];\n            _nft[i] = _nftUnique;\n        }\n\n        return _nft;\n    }\n\n    //     function getBid() public view returns (Bid[] memory){\n    //     Bid[] memory lBids = new Bid[](tripcount);\n    //     for (uint i = 0; i < bidCount; i++) {\n    //         Bid storage lBid = bids[i];\n    //         lBids[i] = lBid;\n    //     }\n    //     return lBids;\n    // }\n}\n",
  "sourcePath": "/home/ghost/Projetos/Blockchain/Flutter/solidity_nft_marketplace/contracts/GabulNft.sol",
  "ast": {
    "absolutePath": "project:/contracts/GabulNft.sol",
    "exportedSymbols": {
      "GabulNft": [
        227
      ],
      "TOTAL_NFTS": [
        4
      ]
    },
    "id": 228,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "constant": true,
        "id": 4,
        "mutability": "constant",
        "name": "TOTAL_NFTS",
        "nameLocation": "83:10:0",
        "nodeType": "VariableDeclaration",
        "scope": 228,
        "src": "66:32:0",
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 2,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "66:7:0",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "hexValue": "3130",
          "id": 3,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "number",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "96:2:0",
          "typeDescriptions": {
            "typeIdentifier": "t_rational_10_by_1",
            "typeString": "int_const 10"
          },
          "value": "10"
        },
        "visibility": "internal"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GabulNft",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 227,
        "linearizedBaseContracts": [
          227
        ],
        "name": "GabulNft",
        "nameLocation": "110:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 8,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "140:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 227,
            "src": "125:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "125:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 6,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "148:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 7,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "148:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "GabulNft.NFT",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "194:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "186:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "186:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "217:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "209:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "209:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "NFT",
            "nameLocation": "172:3:0",
            "nodeType": "StructDefinition",
            "scope": 227,
            "src": "165:64:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "265aa621",
            "id": 18,
            "mutability": "mutable",
            "name": "nfts",
            "nameLocation": "258:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 227,
            "src": "235:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
              "typeString": "struct GabulNft.NFT[10]"
            },
            "typeName": {
              "baseType": {
                "id": 15,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14,
                  "name": "NFT",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13,
                  "src": "235:3:0"
                },
                "referencedDeclaration": 13,
                "src": "235:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                  "typeString": "struct GabulNft.NFT"
                }
              },
              "id": 17,
              "length": {
                "id": 16,
                "name": "TOTAL_NFTS",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4,
                "src": "239:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "ArrayTypeName",
              "src": "235:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage_ptr",
                "typeString": "struct GabulNft.NFT[10]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "283:147:0",
              "statements": [
                {
                  "body": {
                    "id": 48,
                    "nodeType": "Block",
                    "src": "326:98:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 31,
                                "name": "nfts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "340:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                                  "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                                }
                              },
                              "id": 33,
                              "indexExpression": {
                                "id": 32,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "345:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "340:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$13_storage",
                                "typeString": "struct GabulNft.NFT storage ref"
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10,
                            "src": "340:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31653137",
                            "id": 35,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "356:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "1e17"
                          },
                          "src": "340:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "340:20:0"
                      },
                      {
                        "expression": {
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 38,
                                "name": "nfts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "385:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                                  "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                                }
                              },
                              "id": 40,
                              "indexExpression": {
                                "id": 39,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "390:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "385:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$13_storage",
                                "typeString": "struct GabulNft.NFT storage ref"
                              }
                            },
                            "id": 41,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "385:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "307830",
                                "id": 44,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "409:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0x0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 43,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "401:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 42,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "401:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "401:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "385:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47,
                        "nodeType": "ExpressionStatement",
                        "src": "385:28:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "313:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "317:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "313:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49,
                  "initializationExpression": {
                    "assignments": [
                      22
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 22,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "306:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 49,
                        "src": "298:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "298:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "310:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "298:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "321:3:0",
                      "subExpression": {
                        "id": 28,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "321:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 30,
                    "nodeType": "ExpressionStatement",
                    "src": "321:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "293:131:0"
                }
              ]
            },
            "id": 51,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:2:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:0:0"
            },
            "scope": 227,
            "src": "269:161:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "482:204:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 57,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "500:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 58,
                            "name": "TOTAL_NFTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "509:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "500:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 60,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "523:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "533:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "523:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "500:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "492:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "492:43:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 67,
                              "name": "nfts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "553:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                                "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                              }
                            },
                            "id": 69,
                            "indexExpression": {
                              "id": 68,
                              "name": "_index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "558:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "553:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$13_storage",
                              "typeString": "struct GabulNft.NFT storage ref"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "553:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 73,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "583:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "575:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 71,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "575:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "575:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "553:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "545:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "545:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "545:43:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 79,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "606:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "606:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 81,
                              "name": "nfts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "619:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                                "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                              }
                            },
                            "id": 83,
                            "indexExpression": {
                              "id": 82,
                              "name": "_index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "624:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "619:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$13_storage",
                              "typeString": "struct GabulNft.NFT storage ref"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "619:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "606:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "598:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "598:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "598:40:0"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 88,
                          "name": "nfts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "648:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                            "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                          }
                        },
                        "id": 90,
                        "indexExpression": {
                          "id": 89,
                          "name": "_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "653:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "648:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$13_storage",
                          "typeString": "struct GabulNft.NFT storage ref"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "648:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 92,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "669:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "669:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "648:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "648:31:0"
                }
              ]
            },
            "functionSelector": "d96a094a",
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nameLocation": "445:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "457:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "449:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "448:16:0"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "482:0:0"
            },
            "scope": 227,
            "src": "436:250:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "748:35:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 102,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "765:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                        "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "765:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 101,
                  "id": 104,
                  "nodeType": "Return",
                  "src": "758:18:0"
                }
              ]
            },
            "functionSelector": "9ffd36b0",
            "id": 106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalNfts",
            "nameLocation": "701:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:2:0"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "739:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "738:9:0"
            },
            "scope": 227,
            "src": "692:91:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "893:42:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 113,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "910:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                          "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                        }
                      },
                      "id": 115,
                      "indexExpression": {
                        "id": 114,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "915:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "910:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$13_storage",
                        "typeString": "struct GabulNft.NFT storage ref"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "owner",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12,
                    "src": "910:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 112,
                  "id": 117,
                  "nodeType": "Return",
                  "src": "903:25:0"
                }
              ]
            },
            "functionSelector": "c3f64b73",
            "id": 119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftOwnerByIndex",
            "nameLocation": "798:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "825:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "817:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "816:16:0"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "880:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "879:9:0"
            },
            "scope": 227,
            "src": "789:146:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1055:202:0",
              "statements": [
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "1073:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "1065:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1065:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 129,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1081:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1065:17:0"
                },
                {
                  "body": {
                    "id": 152,
                    "nodeType": "Block",
                    "src": "1134:95:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 141,
                                "name": "nfts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "1152:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                                  "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                                }
                              },
                              "id": 143,
                              "indexExpression": {
                                "id": 142,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 131,
                                "src": "1157:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1152:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$13_storage",
                                "typeString": "struct GabulNft.NFT storage ref"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "1152:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 145,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1169:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1152:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 151,
                        "nodeType": "IfStatement",
                        "src": "1148:71:0",
                        "trueBody": {
                          "id": 150,
                          "nodeType": "Block",
                          "src": "1179:40:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1197:7:0",
                                "subExpression": {
                                  "id": 147,
                                  "name": "total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 127,
                                  "src": "1197:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 149,
                              "nodeType": "ExpressionStatement",
                              "src": "1197:7:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 134,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "1112:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 135,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1116:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                          "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1116:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1112:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 153,
                  "initializationExpression": {
                    "assignments": [
                      131
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1105:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "1097:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1097:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 133,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1109:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1097:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1129:3:0",
                      "subExpression": {
                        "id": 138,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "1129:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 140,
                    "nodeType": "ExpressionStatement",
                    "src": "1129:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1092:137:0"
                },
                {
                  "expression": {
                    "id": 154,
                    "name": "total",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 127,
                    "src": "1245:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 125,
                  "id": 155,
                  "nodeType": "Return",
                  "src": "1238:12:0"
                }
              ]
            },
            "functionSelector": "b0a87437",
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalNftQuantityByOwner",
            "nameLocation": "950:26:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "985:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "977:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "976:18:0"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1042:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1041:9:0"
            },
            "scope": 227,
            "src": "941:316:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1368:64:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 166,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1386:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                              "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                            }
                          },
                          "id": 168,
                          "indexExpression": {
                            "id": 167,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "1391:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1386:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$13_storage",
                            "typeString": "struct GabulNft.NFT storage ref"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "1386:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 170,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1406:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                              "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                            }
                          },
                          "id": 172,
                          "indexExpression": {
                            "id": 171,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "1411:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1406:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$13_storage",
                            "typeString": "struct GabulNft.NFT storage ref"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "1406:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 174,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1385:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
                      "typeString": "tuple(uint256,address)"
                    }
                  },
                  "functionReturnParameters": 165,
                  "id": 175,
                  "nodeType": "Return",
                  "src": "1378:47:0"
                }
              ]
            },
            "functionSelector": "95a81b8f",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftById",
            "nameLocation": "1272:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "1291:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1283:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1282:16:0"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1346:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1355:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1345:18:0"
            },
            "scope": 227,
            "src": "1263:169:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "1494:223:0",
              "statements": [
                {
                  "assignments": [
                    188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 188,
                      "mutability": "mutable",
                      "name": "_nft",
                      "nameLocation": "1517:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 225,
                      "src": "1504:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct GabulNft.NFT[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 186,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 185,
                            "name": "NFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 13,
                            "src": "1504:3:0"
                          },
                          "referencedDeclaration": 13,
                          "src": "1504:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                            "typeString": "struct GabulNft.NFT"
                          }
                        },
                        "id": 187,
                        "nodeType": "ArrayTypeName",
                        "src": "1504:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$dyn_storage_ptr",
                          "typeString": "struct GabulNft.NFT[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 196,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 193,
                          "name": "nfts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1534:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                            "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1534:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1524:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct GabulNft.NFT memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 190,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 189,
                            "name": "NFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 13,
                            "src": "1528:3:0"
                          },
                          "referencedDeclaration": 13,
                          "src": "1528:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                            "typeString": "struct GabulNft.NFT"
                          }
                        },
                        "id": 191,
                        "nodeType": "ArrayTypeName",
                        "src": "1528:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$dyn_storage_ptr",
                          "typeString": "struct GabulNft.NFT[]"
                        }
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1524:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct GabulNft.NFT memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1504:42:0"
                },
                {
                  "body": {
                    "id": 221,
                    "nodeType": "Block",
                    "src": "1598:91:0",
                    "statements": [
                      {
                        "assignments": [
                          210
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 210,
                            "mutability": "mutable",
                            "name": "_nftUnique",
                            "nameLocation": "1624:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 221,
                            "src": "1612:22:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                              "typeString": "struct GabulNft.NFT"
                            },
                            "typeName": {
                              "id": 209,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 208,
                                "name": "NFT",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 13,
                                "src": "1612:3:0"
                              },
                              "referencedDeclaration": 13,
                              "src": "1612:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                                "typeString": "struct GabulNft.NFT"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 214,
                        "initialValue": {
                          "baseExpression": {
                            "id": 211,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1637:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                              "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                            }
                          },
                          "id": 213,
                          "indexExpression": {
                            "id": 212,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "1642:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1637:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$13_storage",
                            "typeString": "struct GabulNft.NFT storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1612:32:0"
                      },
                      {
                        "expression": {
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 215,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 188,
                              "src": "1658:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct GabulNft.NFT memory[] memory"
                              }
                            },
                            "id": 217,
                            "indexExpression": {
                              "id": 216,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "1663:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1658:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$13_memory_ptr",
                              "typeString": "struct GabulNft.NFT memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 218,
                            "name": "_nftUnique",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 210,
                            "src": "1668:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                              "typeString": "struct GabulNft.NFT storage pointer"
                            }
                          },
                          "src": "1658:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$13_memory_ptr",
                            "typeString": "struct GabulNft.NFT memory"
                          }
                        },
                        "id": 220,
                        "nodeType": "ExpressionStatement",
                        "src": "1658:20:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 201,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "1576:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 202,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1580:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                          "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1580:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1576:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 222,
                  "initializationExpression": {
                    "assignments": [
                      198
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1569:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 222,
                        "src": "1561:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1561:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 200,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1573:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1561:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1593:3:0",
                      "subExpression": {
                        "id": 205,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "1593:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 207,
                    "nodeType": "ExpressionStatement",
                    "src": "1593:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1556:133:0"
                },
                {
                  "expression": {
                    "id": 223,
                    "name": "_nft",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 188,
                    "src": "1706:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct GabulNft.NFT memory[] memory"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 224,
                  "nodeType": "Return",
                  "src": "1699:11:0"
                }
              ]
            },
            "functionSelector": "d8cb55e3",
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNfts",
            "nameLocation": "1447:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1454:2:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "1480:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct GabulNft.NFT[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 180,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 179,
                        "name": "NFT",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13,
                        "src": "1480:3:0"
                      },
                      "referencedDeclaration": 13,
                      "src": "1480:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                        "typeString": "struct GabulNft.NFT"
                      }
                    },
                    "id": 181,
                    "nodeType": "ArrayTypeName",
                    "src": "1480:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$dyn_storage_ptr",
                      "typeString": "struct GabulNft.NFT[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1479:14:0"
            },
            "scope": 227,
            "src": "1438:279:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 228,
        "src": "101:1909:0",
        "usedErrors": []
      }
    ],
    "src": "32:1979:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/GabulNft.sol",
    "exportedSymbols": {
      "GabulNft": [
        227
      ],
      "TOTAL_NFTS": [
        4
      ]
    },
    "id": 228,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "constant": true,
        "id": 4,
        "mutability": "constant",
        "name": "TOTAL_NFTS",
        "nameLocation": "83:10:0",
        "nodeType": "VariableDeclaration",
        "scope": 228,
        "src": "66:32:0",
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 2,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "66:7:0",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "hexValue": "3130",
          "id": 3,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "number",
          "lValueRequested": false,
          "nodeType": "Literal",
          "src": "96:2:0",
          "typeDescriptions": {
            "typeIdentifier": "t_rational_10_by_1",
            "typeString": "int_const 10"
          },
          "value": "10"
        },
        "visibility": "internal"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GabulNft",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 227,
        "linearizedBaseContracts": [
          227
        ],
        "name": "GabulNft",
        "nameLocation": "110:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 8,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "140:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 227,
            "src": "125:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "125:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 6,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "148:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 7,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "148:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "GabulNft.NFT",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "194:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "186:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "186:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "217:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "209:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "209:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "NFT",
            "nameLocation": "172:3:0",
            "nodeType": "StructDefinition",
            "scope": 227,
            "src": "165:64:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "265aa621",
            "id": 18,
            "mutability": "mutable",
            "name": "nfts",
            "nameLocation": "258:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 227,
            "src": "235:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
              "typeString": "struct GabulNft.NFT[10]"
            },
            "typeName": {
              "baseType": {
                "id": 15,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14,
                  "name": "NFT",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13,
                  "src": "235:3:0"
                },
                "referencedDeclaration": 13,
                "src": "235:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                  "typeString": "struct GabulNft.NFT"
                }
              },
              "id": 17,
              "length": {
                "id": 16,
                "name": "TOTAL_NFTS",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4,
                "src": "239:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "ArrayTypeName",
              "src": "235:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage_ptr",
                "typeString": "struct GabulNft.NFT[10]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "283:147:0",
              "statements": [
                {
                  "body": {
                    "id": 48,
                    "nodeType": "Block",
                    "src": "326:98:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 31,
                                "name": "nfts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "340:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                                  "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                                }
                              },
                              "id": 33,
                              "indexExpression": {
                                "id": 32,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "345:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "340:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$13_storage",
                                "typeString": "struct GabulNft.NFT storage ref"
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10,
                            "src": "340:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31653137",
                            "id": 35,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "356:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "1e17"
                          },
                          "src": "340:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "340:20:0"
                      },
                      {
                        "expression": {
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 38,
                                "name": "nfts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "385:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                                  "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                                }
                              },
                              "id": 40,
                              "indexExpression": {
                                "id": 39,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "390:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "385:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$13_storage",
                                "typeString": "struct GabulNft.NFT storage ref"
                              }
                            },
                            "id": 41,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "385:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "307830",
                                "id": 44,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "409:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0x0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 43,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "401:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 42,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "401:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "401:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "385:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47,
                        "nodeType": "ExpressionStatement",
                        "src": "385:28:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "313:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "317:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "313:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49,
                  "initializationExpression": {
                    "assignments": [
                      22
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 22,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "306:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 49,
                        "src": "298:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "298:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "310:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "298:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "321:3:0",
                      "subExpression": {
                        "id": 28,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "321:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 30,
                    "nodeType": "ExpressionStatement",
                    "src": "321:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "293:131:0"
                }
              ]
            },
            "id": 51,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:2:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:0:0"
            },
            "scope": 227,
            "src": "269:161:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "482:204:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 57,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "500:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 58,
                            "name": "TOTAL_NFTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "509:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "500:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 60,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "523:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "533:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "523:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "500:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "492:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "492:43:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 67,
                              "name": "nfts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "553:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                                "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                              }
                            },
                            "id": 69,
                            "indexExpression": {
                              "id": 68,
                              "name": "_index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "558:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "553:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$13_storage",
                              "typeString": "struct GabulNft.NFT storage ref"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "553:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 73,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "583:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "575:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 71,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "575:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "575:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "553:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "545:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "545:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "545:43:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 79,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "606:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "606:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 81,
                              "name": "nfts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "619:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                                "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                              }
                            },
                            "id": 83,
                            "indexExpression": {
                              "id": 82,
                              "name": "_index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "624:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "619:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$13_storage",
                              "typeString": "struct GabulNft.NFT storage ref"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "619:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "606:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "598:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "598:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "598:40:0"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 88,
                          "name": "nfts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "648:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                            "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                          }
                        },
                        "id": 90,
                        "indexExpression": {
                          "id": 89,
                          "name": "_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "653:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "648:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFT_$13_storage",
                          "typeString": "struct GabulNft.NFT storage ref"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "648:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 92,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "669:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "669:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "648:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "648:31:0"
                }
              ]
            },
            "functionSelector": "d96a094a",
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nameLocation": "445:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "457:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "449:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "448:16:0"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "482:0:0"
            },
            "scope": 227,
            "src": "436:250:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "748:35:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 102,
                      "name": "nfts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "765:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                        "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "765:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 101,
                  "id": 104,
                  "nodeType": "Return",
                  "src": "758:18:0"
                }
              ]
            },
            "functionSelector": "9ffd36b0",
            "id": 106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalNfts",
            "nameLocation": "701:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:2:0"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "739:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "738:9:0"
            },
            "scope": 227,
            "src": "692:91:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "893:42:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 113,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "910:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                          "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                        }
                      },
                      "id": 115,
                      "indexExpression": {
                        "id": 114,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "915:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "910:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$13_storage",
                        "typeString": "struct GabulNft.NFT storage ref"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "owner",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12,
                    "src": "910:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 112,
                  "id": 117,
                  "nodeType": "Return",
                  "src": "903:25:0"
                }
              ]
            },
            "functionSelector": "c3f64b73",
            "id": 119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftOwnerByIndex",
            "nameLocation": "798:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "825:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "817:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "816:16:0"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "880:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "879:9:0"
            },
            "scope": 227,
            "src": "789:146:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1055:202:0",
              "statements": [
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "1073:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "1065:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1065:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 129,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1081:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1065:17:0"
                },
                {
                  "body": {
                    "id": 152,
                    "nodeType": "Block",
                    "src": "1134:95:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 141,
                                "name": "nfts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "1152:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                                  "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                                }
                              },
                              "id": 143,
                              "indexExpression": {
                                "id": 142,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 131,
                                "src": "1157:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1152:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$13_storage",
                                "typeString": "struct GabulNft.NFT storage ref"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "1152:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 145,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1169:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1152:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 151,
                        "nodeType": "IfStatement",
                        "src": "1148:71:0",
                        "trueBody": {
                          "id": 150,
                          "nodeType": "Block",
                          "src": "1179:40:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1197:7:0",
                                "subExpression": {
                                  "id": 147,
                                  "name": "total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 127,
                                  "src": "1197:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 149,
                              "nodeType": "ExpressionStatement",
                              "src": "1197:7:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 134,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "1112:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 135,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1116:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                          "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1116:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1112:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 153,
                  "initializationExpression": {
                    "assignments": [
                      131
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1105:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "1097:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1097:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 133,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1109:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1097:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1129:3:0",
                      "subExpression": {
                        "id": 138,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "1129:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 140,
                    "nodeType": "ExpressionStatement",
                    "src": "1129:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1092:137:0"
                },
                {
                  "expression": {
                    "id": 154,
                    "name": "total",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 127,
                    "src": "1245:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 125,
                  "id": 155,
                  "nodeType": "Return",
                  "src": "1238:12:0"
                }
              ]
            },
            "functionSelector": "b0a87437",
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalNftQuantityByOwner",
            "nameLocation": "950:26:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "985:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "977:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "976:18:0"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1042:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1041:9:0"
            },
            "scope": 227,
            "src": "941:316:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1368:64:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 166,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1386:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                              "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                            }
                          },
                          "id": 168,
                          "indexExpression": {
                            "id": 167,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "1391:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1386:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$13_storage",
                            "typeString": "struct GabulNft.NFT storage ref"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "1386:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 170,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1406:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                              "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                            }
                          },
                          "id": 172,
                          "indexExpression": {
                            "id": 171,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "1411:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1406:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$13_storage",
                            "typeString": "struct GabulNft.NFT storage ref"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "1406:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 174,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1385:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
                      "typeString": "tuple(uint256,address)"
                    }
                  },
                  "functionReturnParameters": 165,
                  "id": 175,
                  "nodeType": "Return",
                  "src": "1378:47:0"
                }
              ]
            },
            "functionSelector": "95a81b8f",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNftById",
            "nameLocation": "1272:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "1291:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1283:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1282:16:0"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1346:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1355:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1345:18:0"
            },
            "scope": 227,
            "src": "1263:169:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "1494:223:0",
              "statements": [
                {
                  "assignments": [
                    188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 188,
                      "mutability": "mutable",
                      "name": "_nft",
                      "nameLocation": "1517:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 225,
                      "src": "1504:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct GabulNft.NFT[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 186,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 185,
                            "name": "NFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 13,
                            "src": "1504:3:0"
                          },
                          "referencedDeclaration": 13,
                          "src": "1504:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                            "typeString": "struct GabulNft.NFT"
                          }
                        },
                        "id": 187,
                        "nodeType": "ArrayTypeName",
                        "src": "1504:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$dyn_storage_ptr",
                          "typeString": "struct GabulNft.NFT[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 196,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 193,
                          "name": "nfts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1534:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                            "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1534:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1524:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct GabulNft.NFT memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 190,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 189,
                            "name": "NFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 13,
                            "src": "1528:3:0"
                          },
                          "referencedDeclaration": 13,
                          "src": "1528:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                            "typeString": "struct GabulNft.NFT"
                          }
                        },
                        "id": 191,
                        "nodeType": "ArrayTypeName",
                        "src": "1528:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$dyn_storage_ptr",
                          "typeString": "struct GabulNft.NFT[]"
                        }
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1524:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct GabulNft.NFT memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1504:42:0"
                },
                {
                  "body": {
                    "id": 221,
                    "nodeType": "Block",
                    "src": "1598:91:0",
                    "statements": [
                      {
                        "assignments": [
                          210
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 210,
                            "mutability": "mutable",
                            "name": "_nftUnique",
                            "nameLocation": "1624:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 221,
                            "src": "1612:22:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                              "typeString": "struct GabulNft.NFT"
                            },
                            "typeName": {
                              "id": 209,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 208,
                                "name": "NFT",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 13,
                                "src": "1612:3:0"
                              },
                              "referencedDeclaration": 13,
                              "src": "1612:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                                "typeString": "struct GabulNft.NFT"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 214,
                        "initialValue": {
                          "baseExpression": {
                            "id": 211,
                            "name": "nfts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1637:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                              "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                            }
                          },
                          "id": 213,
                          "indexExpression": {
                            "id": 212,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "1642:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1637:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$13_storage",
                            "typeString": "struct GabulNft.NFT storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1612:32:0"
                      },
                      {
                        "expression": {
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 215,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 188,
                              "src": "1658:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct GabulNft.NFT memory[] memory"
                              }
                            },
                            "id": 217,
                            "indexExpression": {
                              "id": 216,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "1663:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1658:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$13_memory_ptr",
                              "typeString": "struct GabulNft.NFT memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 218,
                            "name": "_nftUnique",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 210,
                            "src": "1668:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                              "typeString": "struct GabulNft.NFT storage pointer"
                            }
                          },
                          "src": "1658:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFT_$13_memory_ptr",
                            "typeString": "struct GabulNft.NFT memory"
                          }
                        },
                        "id": 220,
                        "nodeType": "ExpressionStatement",
                        "src": "1658:20:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 201,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "1576:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 202,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1580:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$10_storage",
                          "typeString": "struct GabulNft.NFT storage ref[10] storage ref"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1580:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1576:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 222,
                  "initializationExpression": {
                    "assignments": [
                      198
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1569:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 222,
                        "src": "1561:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1561:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 200,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1573:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1561:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1593:3:0",
                      "subExpression": {
                        "id": 205,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "1593:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 207,
                    "nodeType": "ExpressionStatement",
                    "src": "1593:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1556:133:0"
                },
                {
                  "expression": {
                    "id": 223,
                    "name": "_nft",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 188,
                    "src": "1706:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct GabulNft.NFT memory[] memory"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 224,
                  "nodeType": "Return",
                  "src": "1699:11:0"
                }
              ]
            },
            "functionSelector": "d8cb55e3",
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNfts",
            "nameLocation": "1447:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1454:2:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "1480:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_NFT_$13_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct GabulNft.NFT[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 180,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 179,
                        "name": "NFT",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 13,
                        "src": "1480:3:0"
                      },
                      "referencedDeclaration": 13,
                      "src": "1480:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFT_$13_storage_ptr",
                        "typeString": "struct GabulNft.NFT"
                      }
                    },
                    "id": 181,
                    "nodeType": "ArrayTypeName",
                    "src": "1480:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFT_$13_storage_$dyn_storage_ptr",
                      "typeString": "struct GabulNft.NFT[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1479:14:0"
            },
            "scope": 227,
            "src": "1438:279:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 228,
        "src": "101:1909:0",
        "usedErrors": []
      }
    ],
    "src": "32:1979:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xeCe8bF85409e470CCe15eBd4379467CE616EaBf2",
      "transactionHash": "0xec25ff2c6ff291677e079a373961bee9e3fa8fa157d6d1a0d1bd198dddf1591d"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-04-07T20:06:23.111Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}